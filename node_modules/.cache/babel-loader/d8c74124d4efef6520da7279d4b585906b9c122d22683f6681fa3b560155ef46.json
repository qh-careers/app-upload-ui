{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soory\\\\Documents\\\\GitHub\\\\app-upload-ui\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../Table.css\";\nimport FileUpload from './upload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = () => {\n  _s();\n  const [apps, setApps] = useState([]);\n  const [error, setError] = useState(null);\n  const [showForm, setShowForm] = useState(false); // Control form visibility\n  const [formData, setFormData] = useState({}); // Initial form data\n\n  // Implement your fetchApps logic using backend API calls\n  // Example:\n  useEffect(() => {\n    const fetchApps = async () => {\n      try {\n        const response = await fetch('https://your-backend-url/apps');\n        if (!response.ok) {\n          throw new Error('Failed to fetch apps');\n        }\n        const data = await response.json();\n        setApps(data.apps);\n      } catch (error) {\n        console.error('Error fetching apps:', error);\n        setError(error.message || 'Failed to fetch apps');\n      }\n    };\n    fetchApps();\n  }, []);\n  const handlePlayButtonClick = async appName => {\n    // Replace with your existing play button logic, using appName if needed\n    console.log('Playing app:', appName);\n\n    // Add backend interaction here if necessary\n\n    // Example:\n    // const response = await fetch(`https://your-backend-url/apps/${appName}/run`, {\n    //   method: 'POST',\n    // });\n    // if (!response.ok) {\n    //   console.error('Error playing app:', response.statusText);\n    //   // Handle play button submission errors\n    // }\n  };\n  const handleFormOpen = appName => {\n    // Fetch initial form data using appName and your backend API\n    fetch(`https://your-backend-url/apps/${appName}/config`).then(response => response.json()).then(data => setFormData(data)).catch(error => console.error('Error fetching form data:', error));\n    setShowForm(true);\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    // Submit form data to backend using appName and formData\n    const response = await fetch(`https://your-backend-url/apps/${formData.appName}/saveconfig`, {\n      method: 'POST',\n      body: JSON.stringify(formData)\n    });\n    if (response.ok) {\n      setShowForm(false); // Close form on successful submission\n      // Update app data in table (if needed)\n      const updatedApps = await response.json();\n      setApps(updatedApps); // Assuming response contains updated apps\n    } else {\n      console.error('Error submitting form data:', response.statusText);\n      // Handle form submission errors\n    }\n  };\n  const TableRow = ({\n    appInstanceName,\n    appName,\n    description,\n    onFormOpen\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: appInstanceName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: appName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onFormOpen(appName),\n          children: \"Configure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePlayButtonClick(appName),\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n      setApps: setApps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"App Instance Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"App Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: apps.map((app, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          appInstanceName: app.instance_name,\n          appName: app.app_name,\n          description: app.description,\n          onFormOpen: handleFormOpen\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(Form, {\n      appName: formData.appName // Pass appName to child component\n      ,\n      data: formData // Pass form data to child component\n      ,\n      onSubmit: handleFormSubmit,\n      onClose: () => setShowForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Table, \"cT2NvLDDPchv5CbDOujs2iXybVo=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useEffect","FileUpload","jsxDEV","_jsxDEV","Table","_s","apps","setApps","error","setError","showForm","setShowForm","formData","setFormData","fetchApps","response","fetch","ok","Error","data","json","console","message","handlePlayButtonClick","appName","log","handleFormOpen","then","catch","handleFormSubmit","e","preventDefault","method","body","JSON","stringify","updatedApps","statusText","TableRow","appInstanceName","description","onFormOpen","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","app","index","instance_name","app_name","Form","onSubmit","onClose","_c","$RefreshReg$"],"sources":["C:/Users/soory/Documents/GitHub/app-upload-ui/src/components/Table.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../Table.css\";\nimport FileUpload from './upload';\n\nconst Table = () => {\n  const [apps, setApps] = useState([]);\n  const [error, setError] = useState(null);\n  const [showForm, setShowForm] = useState(false); // Control form visibility\n  const [formData, setFormData] = useState({}); // Initial form data\n\n  // Implement your fetchApps logic using backend API calls\n  // Example:\n  useEffect(() => {\n    const fetchApps = async () => {\n      try {\n        const response = await fetch('https://your-backend-url/apps');\n        if (!response.ok) {\n          throw new Error('Failed to fetch apps');\n        }\n        const data = await response.json();\n        setApps(data.apps);\n      } catch (error) {\n        console.error('Error fetching apps:', error);\n        setError(error.message || 'Failed to fetch apps');\n      }\n    };\n\n    fetchApps();\n  }, []);\n\n  const handlePlayButtonClick = async (appName) => {\n    // Replace with your existing play button logic, using appName if needed\n    console.log('Playing app:', appName);\n\n    // Add backend interaction here if necessary\n\n    // Example:\n    // const response = await fetch(`https://your-backend-url/apps/${appName}/run`, {\n    //   method: 'POST',\n    // });\n    // if (!response.ok) {\n    //   console.error('Error playing app:', response.statusText);\n    //   // Handle play button submission errors\n    // }\n  };\n\n  const handleFormOpen = (appName) => {\n    // Fetch initial form data using appName and your backend API\n    fetch(`https://your-backend-url/apps/${appName}/config`)\n      .then(response => response.json())\n      .then(data => setFormData(data))\n      .catch(error => console.error('Error fetching form data:', error));\n    setShowForm(true);\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    // Submit form data to backend using appName and formData\n    const response = await fetch(`https://your-backend-url/apps/${formData.appName}/saveconfig`, {\n      method: 'POST',\n      body: JSON.stringify(formData),\n    });\n    if (response.ok) {\n      setShowForm(false); // Close form on successful submission\n      // Update app data in table (if needed)\n      const updatedApps = await response.json();\n      setApps(updatedApps); // Assuming response contains updated apps\n    } else {\n      console.error('Error submitting form data:', response.statusText);\n      // Handle form submission errors\n    }\n  };\n\n  const TableRow = ({ appInstanceName, appName, description, onFormOpen }) => {\n    return (\n      <tr>\n        <td>{appInstanceName}</td>\n        <td>{appName}</td>\n        <td>{description}</td>\n        <td>\n          <button onClick={() => onFormOpen(appName)}>Configure</button>\n        </td>\n        <td>\n          <button onClick={() => handlePlayButtonClick(appName)}>\n            Play\n          </button>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <div className=\"table-container\">\n      <FileUpload setApps={setApps} />\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>App Instance Name</th>\n            <th>App Name</th>\n            <th>Description</th>\n            <th>Configuration</th>\n            <th>Play</th>\n          </tr>\n        </thead>\n        <tbody>\n          {apps.map((app, index) => (\n            <TableRow\n              key={index}\n              appInstanceName={app.instance_name}\n              appName={app.app_name}\n              description={app.description}\n              onFormOpen={handleFormOpen}\n            />\n          ))}\n        </tbody>\n      </table>\n\n      {showForm && (\n        <Form\n          appName={formData.appName} // Pass appName to child component\n          data={formData} // Pass form data to child component\n          onSubmit={handleFormSubmit}\n          onClose={() => setShowForm(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}